export const projectDataOf42Seoul = [
  {
    image: "",
    title: "libft",
    // link: "",
    tags: ["C", "tag2", "tag3"],
    description: "description",
    x: 0.38,
    y: 0.1,
  },
  {
    image: "",
    title: "philosophers",
    // link: "",
    tags: ["C", "tag2", "tag3"],
    description: "description",
    x: 0.65,
    y: 0.1,
  },
  {
    image: "",
    title: "minishell",
    // link: "",
    tags: ["C", "tag2", "tag3"],
    description: "description",
    x: 0.7,
    y: 0.35,
  },
  {
    image: "",
    title: "miniRT",
    // link: "",
    tags: ["C", "RayTracing", "Math"],
    description: "description",
    x: 0.47,
    y: 0.43,
  },
  {
    image: "",
    title: "Inception",
    // link: "",
    tags: ["Docker", "docker-compose", "VM", "Nginx", "WordPress", "MariaDB"],
    description: `가상머신 위에 docker를 설치하고 Nginx, WordPress, MariaDB 컨테이너를 올렸습니다.
    각 컨테이너는 Alpine Linux 이미지에서 직접 패키지를 설치하는 Dockerfile을 만들어 설정해두었습니다.
    docker-compose를 통해 모든 컨테이너를 빌드, 실행시키고 네트워크와 볼륨도 설정했습니다.`,
    x: 0.5,
    y: 0.58,
  },
  {
    image: "",
    title: "Webserv",
    // link: "",
    tags: ["C++", "Web Server", "IO Muliplexing", "Socket"],
    description: "description",
    x: 0.51,
    y: 0.77,
  },
  {
    // image: ccpp,
    image: "",
    title: "칙칙퐁퐁",
    link: "http://ccpp.games",
    tags: [
      "typescript",
      "React",
      "NestJS",
      "PostgreSQL",
      "Nginx",
      "Docker",
      "docker-compose",
      "Socket.IO",
      "Game",
    ],
    description: "description",
    x: 0.7,
    y: 0.9,
  },
];

export const projectDataOfDataScience = [
  {
    image: "",
    title: "Project1",
    // link: "",
    tags: ["C", "tag2", "tag3"],
    description: "description",
    x: 0.55,
    y: 0.1,
  },
  {
    image: "",
    title: "Project2",
    // link: "",
    tags: ["C", "tag2", "tag3"],
    description: "description",
    x: 0.35,
    y: 0.35,
  },
  {
    image: "",
    title: "Project3",
    // link: "",
    tags: ["C", "tag2", "tag3"],
    description: "description",
    x: 0.5,
    y: 0.5,
  },
  {
    image: "",
    title: "Project4",
    // link: "",
    tags: ["C", "RayTracing", "Math"],
    description: "description",
    x: 0.25,
    y: 0.8,
  },
  {
    image: "",
    title: "Project5",
    // link: "",
    tags: ["Docker", "docker-compose", "VM", "Nginx", "WordPress", "MariaDB"],
    description: `가상머신 위에 docker를 설치하고 Nginx, WordPress, MariaDB 컨테이너를 올렸습니다.
    각 컨테이너는 Alpine Linux 이미지에서 직접 패키지를 설치하는 Dockerfile을 만들어 설정해두었습니다.
    docker-compose를 통해 모든 컨테이너를 빌드, 실행시키고 네트워크와 볼륨도 설정했습니다.`,
    x: 0.7,
    y: 0.9,
  },
];
